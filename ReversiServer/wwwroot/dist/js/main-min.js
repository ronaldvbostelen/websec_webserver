var SPA = { init: function () { $('<section id="canvas">').appendTo("body"), SPA.Splashscreen.init(), SPA.Data.init(), SPA.Username.init(), SPA.Playboard.init(), SPA.PopUp.init(), SPA.Chart.init(), SPA.Template.init() } }; SPA.Chart = function () { var n, e; return { init: function () { n = $('<canvas id="chart">'), $("#canvas").append($('<div id="chart-container">').append(n)), e = new Chart(n, { type: "bar", data: { labels: ["Black", "White"], datasets: [{ data: [0, 0], backgroundColor: ["rgba(0, 0, 0, 0.75)", "rgba(255, 255, 255, 0.75)"], borderColor: ["rgba(255, 255, 255, 1)", "rgba(0, 0, 0, 1)"], borderWidth: 1, hoverBorderWidth: [2, 2] }] }, options: { maintainAspectRatio: !1, legend: !1, tooltips: { enabled: !1 }, scales: { yAxes: [{ ticks: { precision: 0, beginAtZero: !0 } }] } } }) }, updateBars: function (n) { var o = 0, t = 0; n.forEach(function (n) { n.forEach(function (n) { 0 === n && o++ , 1 === n && t++ }) }), e.data.datasets[0].data[0] === o && e.data.datasets[0].data[1] === t || (e.data.datasets[0].data = [o, t]), e.update() } } }(), SPA.Data = function () { var n, e; return $(window).on("beforeunload", function () { $.ajax({ contentType: "application/json", url: n.api + n.endpoints.game + e.gameId + n.endpoints.quit, method: "PUT", async: !1, data: JSON.stringify(e), success: null, error: function (n, e, o) { SPA.PopUp.popupContent("ERROR", "Unable to quit, try again", "red") } }) }), { init: function () { n = { api:"https://drysolidkiss.nl/api/",endpoints:{game:"games/",player:"players/",joinGame:"games/0/joinGame",end:"/end",draw:"/draw",nodraw:"/nodraw",surrender:"/surrender",outOfMoves:"/out",quit:"/quit"}}},joinGame:function(o){return new Promise(function(t,a){$.ajax({contentType:"application/json",url:n.api+n.endpoints.joinGame,method:"POST",data:o,success:function(n,o,a){e=n,SPA.Playboard.refresh(),t(null!==n.playerOne)},error:function(n,e,o){a("Unable to join or create new game")}})})},updateBoard:function(o){return e.gameboard=JSON.stringify(o),new Promise(function(o,t){$.ajax({contentType:"application/json",url:n.api+n.endpoints.game+e.gameId,method:"PUT",data:JSON.stringify(e),success:function(n,e,t){o("valid move")},error:function(n,e,o){t("invalid move")}})})},addPlayer:function(e){return new Promise(function(o,t){$.ajax({contentType:"application/json",url:n.api+n.endpoints.player,method:"POST",data:JSON.stringify({username:e}),success:function(n,e,t){o(n)},error:function(n,e,o){t("Unable to store username")}})})},getGame:function(){return new Promise(function(o,t){$.ajax({url:n.api+n.endpoints.game+e.gameId,method:"GET",success:function(n,e,t){o(n)},error:function(n,e,o){t("Could not refresh game, try again later..")}})})},drawGame:function(){$.ajax({contentType:"application/json",url:n.api+n.endpoints.game+e.gameId+n.endpoints.draw,method:"PUT",data:JSON.stringify(e),error:function(n,e,o){SPA.PopUp.popupContent("ERROR","Unable to request draw, try again","red")}})},noDrawGame:function(){$.ajax({contentType:"application/json",url:n.api+n.endpoints.game+e.gameId+n.endpoints.nodraw,method:"PUT",error:function(n,e,o){SPA.PopUp.popupContent("ERROR","Unable to process your answer, try again","red")}})},surrenderGame:function(){$.ajax({contentType:"application/json",url:n.api+n.endpoints.game+e.gameId+n.endpoints.surrender,method:"PUT",data:JSON.stringify(e),error:function(n,e,o){SPA.PopUp.popupContent("ERROR","Unable to surrender, try again","red")}})},outOfMoves:function(){$.ajax({contentType:"application/json",url:n.api+n.endpoints.game+e.gameId+n.endpoints.outOfMoves,method:"PUT",data:JSON.stringify(e),error:function(n,e,o){SPA.PopUp.popupContent("ERROR","Unable to address out of moves, try again","red")}})}}}(),SPA.Logic=function(){function n(n,e,o){for(var t,a,p,i=[],r=[],s=n=parseInt(n),u=e=parseInt(e),d=SPA.Username.isEnemy?1:0,c=SPA.Username.isEnemy?0:1;0<n&&o[e][--n]===d&&!((t=n-1)<0);)r.push([e,n]),o[e][t]===c&&i.push(r);for(n=s,r=[];n<7&&o[e][++n]===d&&!(7<(t=n+1));)r.push([e,n]),o[e][t]===c&&i.push(r);for(n=s,r=[];0<e&&o[--e][n]===d&&!((t=e-1)<0);)r.push([e,n]),o[t][n]===c&&i.push(r);for(e=u,r=[];e<7&&o[++e][n]===d&&!(7<(t=e+1));)r.push([e,n]),o[t][n]===c&&i.push(r);for(e=u,r=[];0<e&&0<n&&o[--e][--n]===d&&(a=e-1,!((p=n-1)<0||a<0));)r.push([e,n]),o[a][p]===c&&i.push(r);for(n=s,e=u,r=[];e<7&&0<n&&o[++e][--n]===d&&(a=e+1,!((p=n-1)<0||7<a));)r.push([e,n]),o[a][p]===c&&i.push(r);for(n=s,e=u,r=[];e<7&&n<7&&o[++e][++n]===d&&(a=e+1,!(7<(p=n+1)||7<a));)r.push([e,n]),o[a][p]===c&&i.push(r);for(n=s,e=u,r=[];0<e&&n<7&&o[--e][++n]===d&&(a=e-1,!(7<(p=n+1)||a<0));)r.push([e,n]),o[a][p]===c&&i.push(r);return i}return{init:function(){},validateMove:n,possibleNextMoves:function(e){var o=[];e.forEach(function(t,a){t.forEach(function(t,p){parseInt(t)===(SPA.Username.isEnemy?1:0)&&(p+1<=7&&null===e[a][p+1]&&0<n(p+1,a,e).length&&o.push([p+1,a]),0<=p-1&&null===e[a][p-1]&&0<n(p-1,a,e).length&&o.push([p-1,a]),0<=a-1&&null===e[a-1][p]&&0<n(p,a-1,e).length&&o.push([p,a-1]),a+1<=7&&null===e[a+1][p]&&0<n(p,a+1,e).length&&o.push([p,a+1]),0<=a-1&&p+1<=7&&null===e[a-1][p+1]&&0<n(p+1,a-1,e).length&&o.push([p+1,a-1]),a+1<=7&&p+1<=7&&null===e[a+1][p+1]&&0<n(p+1,a+1,e).length&&o.push([p+1,a+1]),0<=a-1&&0<=p-1&&null===e[a-1][p-1]&&0<n(p-1,a-1,e).length&&o.push([p-1,a-1]),a+1<=7&&0<=p-1&&null===e[a+1][p-1]&&0<n(p-1,a+1,e).length&&o.push([p-1,a+1]))})});var t=[];return o.forEach(function(n,e,a){for(var p=!1,i=e+1;i<o.length;i++)n[0]===o[i][0]&&n[1]===o[i][1]&&(p=!0);p||t.push(n)}),t.length}}}(),SPA.Playboard=function(){var n,e,o,t,a,p,i;function r(){SPA.Data.getGame().then(function(r){null!==(e=JSON.parse(r)).Active&&e.Board.toString()!==n.toString()&&(n=e.Board,function(o){void 0!==$("#board")[0]&&$("#board").remove(),$("#canvas").append(SPA.Template.parseTemplate("board",o)),$("#board").children(".tile").each(function(n,e){var o;""!==$(e).text()&&$(e).append((o="0"===$(e).text(),$('<div class="puck '+(o?"p1":"p2")+'"></div>').draggable({start:function(n,e){$(this).css("position","relative").css("z-index","10").css("z-index",10)},stop:function(n,e){$(this).css("position","unset").css("z-index","")}})))}),$(".tile").on("mouseover",function(){if(0===$(this).children().length){var e=$(this)[0].id.split("_");0<SPA.Logic.validateMove(e[1],e[0],n).length&&(o=$(this)).animate({backgroundColor:"#00ff20"},"slow",function(){o.css("background-color","green")})}var o}).on("click",function(){if(0<$(this).children().length)SPA.PopUp.popupContent("Invalid move","Tile is already occupied..","red"),SPA.PopUp.show();else if((SPA.Username.isEnemy?"-":"+")===e.LastMove&&"N"!==e.Ending)SPA.PopUp.popupContent("Wait a minute","Its not your turn yet..","red"),SPA.PopUp.show();else{var o=$(this)[0].id.split("_"),t=SPA.Logic.validateMove(o[1],o[0],n);0<t.length?(n[o[0]][o[1]]=SPA.Username.isEnemy?0:1,t.forEach(function(e){e.forEach(function(e){n[e[0]][e[1]]=SPA.Username.isEnemy?0:1})}),e.Board=n,n="",SPA.Data.updateBoard(e).then(function(n){0<SPA.Logic.possibleNextMoves(e.Board)?(SPA.PopUp.popupContent("Outstanding move!","Really great..","green"),SPA.PopUp.show()):SPA.Data.outOfMoves()}).catch(function(n){SPA.PopUp.popupContent("Something went wrong","Unable to update board.. if this persists please close the game","red",!1),SPA.PopUp.show()})):(SPA.PopUp.popupContent("Invalid move","You cannot do that..","red"),SPA.PopUp.show())}})}(e),SPA.Chart.updateBars(e.Board),0===SPA.Logic.possibleNextMoves(e.Board)&&SPA.Data.outOfMoves()),e.Active?(0<$("#overlay").length&&function(n){SPA.Splashscreen.hide();var e=$('<div id="btnBox">');e.append($('<button class="Btn" id="drawBtn">DRAW</button>').on("click",function(){SPA.Data.drawGame()})).append($('<button class="Btn" id="surrenderBtn">SURRENDER</button>').on("click",function(){SPA.Data.surrenderGame()})),$("#canvas").append(e).append(SPA.Template.parseTemplate("enemy",{enemy:n})),p=n}(SPA.Username.isEnemy?e.PlayerTwo:e.PlayerOne),null===e.Ending&&t&&(t=!t,SPA.PopUp.popupContent("No Draw",p+" doesn't want to draw. Continue playing or surrender","darkslateblue"),SPA.PopUp.show()),null===e.Ending&&o&&(o=!o),"D"===e.Ending&&("X"!==(SPA.Username.isEnemy?e.P1:e.P2)||t||(SPA.PopUp.popupContent("Waiting..","Requesting draw from "+p+", just a moment...","orange"),SPA.PopUp.show(),t=!t),null!==(SPA.Username.isEnemy?e.P1:e.P2)||o||(SPA.PopUp.popupContent("Draw",p+" requested a draw, do you accept?","orange",!1,!0),SPA.PopUp.show(),$("#popup button:nth-child(1)").on("click",function(){SPA.Data.noDrawGame(),SPA.PopUp.hide()}),$("#popup button:nth-child(2)").on("click",function(){SPA.Data.drawGame()}),o=!o)),"N"===e.Ending&&(0!==SPA.Logic.possibleNextMoves(e.Board)||a||(SPA.PopUp.popupContent("Out Of Moves","You are out of moves, but "+p+" isn't, so just sit back and relax and wait until "+p+" finishes","pink"),SPA.PopUp.show(),a=!a),0<SPA.Logic.possibleNextMoves(e.Board)&&!a&&(SPA.PopUp.popupContent("Free for all",p+" is out of moves, finish him!","pink"),SPA.PopUp.show(),a=!a))):!1===e.Active&&(clearInterval(i),function(n){switch(e.Ending){case"D":SPA.PopUp.popupContent("Ending: Draw","Not too shabby","darkturquoise",!0);break;case"S":(SPA.Username.isEnemy?"-":"+")===e.LastMove?SPA.PopUp.popupContent("Ending: Won (surrendered)","Only the brave survive, well done","gold",!0):SPA.PopUp.popupContent("Ending: Lost (surrendered)","Well.. better luck next time","darkred",!0);break;case"T":SPA.PopUp.popupContent("Ending: Tie","Well played. You found a worthy opponent","darkred",!0);break;case"F":(SPA.Username.isEnemy?"-":"+")===e.LastMove?SPA.PopUp.popupContent("Ending: Won","You came you saw you conquered, well done!","gold",!0):SPA.PopUp.popupContent("Ending: Lost","Too bad, you lost. You were a worthy opponent. Try again","darkred",!0);break;case"Q":"Q"===e.Ending&&(SPA.Username.isEnemy?"-":"+")!==e.LastMove&&SPA.PopUp.popupContent("Ending: Won (quit)","Only the weak quit. Well done!","darkgoldenrod",!0)}SPA.PopUp.show(),$("#popup #newGameBtn").on("click",function(){SPA.PopUp.hide(),location.reload()})}())}).catch(function(n){SPA.PopUp.popupContent("Something went wrong..","Couldn't fetch gamedata. Reason: "+n,"red"),SPA.PopUp.show()})}return{init:function(){n="",o=t=a=!1},refresh:function(){i=setInterval(r,250)}}}(),SPA.PopUp=function(){var n,e,o=0;function t(){$("#popup").remove(),e=0}return{init:function(){},show:function(){void 0!==$("#popup")[0]&&$("#popup").remove(),$("#canvas").append(n),$("#close span").on("click",function(){t()}),sessionStorage.setItem("MSG#"+o++%10,$("#popup h2").text()+" "+$("#popup p").text())},hide:t,popupContent:function(o,t,a,p,i){$("#popup h1").text()!==o?e=0:e++,n=SPA.Template.parseTemplate("popup",{title:o,message:t+(0<e?"("+e+"x)":""),close:p,draw:i,color:a})}}}(),SPA.Splashscreen=function(){var n,e;return{init:function(){n=$('<div class="splash"><div class="splash-loader"><div class="splash-circle">&nbsp;</div><div class="splash-circle">&nbsp;</div><div class="splash-circle">&nbsp;</div><div class="splash-circle">&nbsp;</div></div></div>'),e=$('<div id="splashTxt">').text("Just a moment.. looking for a badass opponent")},show:function(){$("#canvas").append($('<div id="overlay">').append(n).append(e))},hide:function(){$("#overlay").remove()}}}(),SPA.Template=function(){var n;return{init:function(){n={enemy:this.enemy,player:this.player,popup:this.popup,board:this.board}},getTemplate:function(e){return n[e]},parseTemplate:function(e,o){return n[e](o)}}}(),SPA.Username=function(){var n,e;function o(e){$("#username").val().length<3?alert("Please choose a name with three or more letters"):SPA.Data.addPlayer(e.val()).then(function(e){n=e,sessionStorage.setItem("player",JSON.stringify(e)),$("#overlay").remove(),$("#loginModal").remove(),t()}).catch(function(n){SPA.PopUp.popupContent("Something went wrong..",n,"red",!1),SPA.PopUp.show()})}function t(){SPA.Splashscreen.show(),SPA.Data.joinGame(sessionStorage.getItem("player")).then(function(o){var t,a;e=o,t=n.username,a=o,$("#canvas").append(SPA.Template.parseTemplate("player",{playerName:t,enemy:a}))}).catch(function(n){SPA.PopUp.popupContent("Something went wrong..",n,"red",!1),SPA.PopUp.show()})}return{init:function(){var e,a,p,i;null===sessionStorage.getItem("player")?(e=$("<h1>").text("USERNAME"),a=$('<input type="text" id="username">'),p=$('<input type="submit" value="SUBMIT" id="submitBtn">'),i=$('<div id="overlay"></div>'),$("#canvas").append(i).append($('<div id="loginModal">').append(e).append(a).append(p)),p.on("click",function(){o(a)}),a.on("keypress",function(n){"Enter"===n.originalEvent.code&&o(a)})):(n=JSON.parse(sessionStorage.getItem("player")),t())},get isEnemy(){return e}}}();